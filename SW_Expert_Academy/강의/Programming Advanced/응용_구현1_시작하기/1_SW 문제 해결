SW문제해결역량
    프로그램 작성을 위한 많은 제약조건들과 요구사항들을 이해하고 최선의 방법을 찾아내는 능력
    - 프로그래머가 사용하는 언어, 라이브러리, 자료구조, 알고리즘에 대한 지식을 적재적소에 연결하여 큰 그림을 만드는 능력
    - 문제 해결 역량은 추상적인 기술이다.
        -명확하게 정의된 실체가 없고,
        -알고리즘을 암기하고 문제들을 많이 풀어본다고 향상되는 것은 아님
        -향상을 위해서는 훈련이 필요
    -문제해결능력을 향상시키는 훈련
        - 새로운 언어, 프레임워크, 개발 방법론들의 조합방법을 배워야함
        - 프로그래밍 경험을 통해서 나아질 것이라는 기대는 옳지 않음
        - 인위적 상황을 만들어 훈련하는 것이 바람직
            - 잘 정제된 추상적 문제를 제시하고, 해결하며넛 문제 해결 능력을 향상시킬 수 있는 훈련 필요
문제 해결 과정
    문제해결단계
        문제를 읽고 이해하기
        문제를 익숙한 용어로 재정의하기
        어떻게 해결할지 계획 세우기
        계획대로 문제해결가능할지 검증하기
        프로그램으로 구현하기
        풀이를 돌아보고, 개선할 방법찾기
    문제해결전략
    직관과 체계적인 접근
    -체계적 접근을 위한 질문들
        -비슷한 문제를 풀어본 적이 있던가?
        -단순한 방법에서 시작할 수 있을까?
        -문제를 단순화할 수 있을까?, 그림으로 그려볼 수 있을까?, 수식으로 표현할 수 있을까?
        -문제를 분해할 수 있을까?
        -뒤에서부터 생각해서 문제를 풀 수 있을까?
        -특정한 형태의 답만 고려할 수 있을까?