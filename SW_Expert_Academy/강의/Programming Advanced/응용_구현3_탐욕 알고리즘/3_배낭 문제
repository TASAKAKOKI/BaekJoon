<배낭문제>
    :도둑은 부자들의 값진 물건들을 훔치기 위해 보관 창고에 침입
    :도둑음 훔친 물건을 배낭에 담아 올 계획
    :이때, 배낭은 담을 수 있는 총 무게(W)가 정해져있음
    :창고에는 여러 개(n)의 물건들이 있고, 각각의 물건에는 무게와 값이 정해져 있음
    :경비원들에게 발각되기 전에 배낭의 무게를 초과하지 않으면서, 값의 총합이 최대가 되도록, 물건들을 선택해서 담기.
    ==> 배낭이 수용할 수 있는 무게를 초과하지 않으면서, 값의 총합이 최대가 되도록 어떤 물건들을 담아야 할까?
    <Knapsack 문제의 정형적 정의>
        S = {item1,item2,....,itemn} : 물건들의 집합
        wi = itemi의 무게, Pi = itemi의 값
        W: 배낭이 수용가능한 총 무게
        문제 정의
            시그마(itemi가 집합A의 원소일때)wi <= W를 만족하면서, 시그마(itemi가 집합A의 원소일때)Pi가 최대가 되도록 S의 부분집합이 되는 A를 결정하는 문제
    <Knapsack 문제 유형>
    >> 0-1 Knapsack문제유형
        : 배낭에 물건을 통째로 담아야 하는 문제(물건을 쪼갤 수 없는 경우)
    >> Fractional Knapsack문제유형
        : 물건을 부분적으로 담는 것이 허용되는 문제(물건을 쪼갤 수 있는 경우, 값도 비례하여 나눠짐)

    >> 0-1 Knapsack문제유형에 대한 완전 검색 방법
        - 완전 검색으로 물건들의 집합S에 대한 모든 부분집합을 구함
        - 부분집합의 총 무게가 배낭 무게 W를 초과하는 집합들은 버리고, 나머지 집합에서 총 값이 가장 큰 집합 선택
        - 물건의 개수가 증가하면 시간 복잡도가 지수적으로 증가...
            : 원소의 수가 n인 집합의 부분집합의 수는 2^n이므로..
    >> 0-1 Knapsack문제유형에 대한 탐욕적 방법1
        방법1:
            - 값이 비싼 물건부터 채움
        방법2:
            - 무게가 가벼운 물건부터 채움
        방법3:
            - 무게 당 값이 높은 순서로 물건을 채우기
        ==> 세가지 방법 모두 탐욕적 방법으로 최적해를 구하는데에 어려움이 있음
    >> Fractional Knapsack문제유형에 대한 탐욕적 방법
        물건의 일부를 잘라서 담을 수 있는 경우:
            - 무게 당 값이 높은 순서로 물건을 채우면 최적해를 구할 수 있음
            ==> 이상적으로 구할 수 있는 최대 가지
            
       
    
